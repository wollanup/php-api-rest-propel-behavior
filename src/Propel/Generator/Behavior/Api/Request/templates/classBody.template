
    /**
     * Set state of the object after request data hydration
     *
     * @param ActiveRecordInterface|<?php echo $entityClassName ?> $obj
     *
     */
    public function afterCreate(ActiveRecordInterface $obj)
    {
        return parent::afterCreate($obj);
    }

    /**
     * Set state of the object after request data hydration
     *
     * @param ActiveRecordInterface|<?php echo $entityClassName ?> $obj
     *
     */
    public function afterFetch(ActiveRecordInterface $obj)
    {
        return parent::afterFetch($obj);
    }

    /**
     * Set state of the object before request data hydration
     *
     * @param ActiveRecordInterface|<?php echo $entityClassName ?> $obj
     *
     */
    public function beforeCreate(ActiveRecordInterface $obj)
    {
        return parent::beforeCreate($obj);
    }

    /**
     * Set state of the object before request data hydration
     *
     * @param ModelCriteria|<?php echo $entityClassName ?>Query $query
     *
     * @return ModelCriteria|<?php echo $entityClassName ?>Query
     *
     */
    public function beforeFetch(ModelCriteria $query)
    {
        return parent::beforeFetch($query);
    }

	/**
	 * None, all or partial list of properties
	 *
	 * @return array List of modifiable properties
	 */
	public function getModifiableProperties()
	{
		return parent::getModifiableProperties();
	}

	/**
     * None, all or partial list of properties
     *
     * @return array List of writable properties
     */
    public function getRequiredWritableProperties()
    {
        return parent::getRequiredWritableProperties();
    }

    /**
     * None, all or partial list of properties
     *
     * @return array List of writable properties
     */
    public function getWritableProperties()
    {
        return parent::getWritableProperties();
    }

    /**
     * None, all or partial list of fields
     *
     * @return array List of visible properties
     */
    protected function getVisibleFields()
    {
        return $this->getAllProperties();
    }

    /**
     * None, all or partial list of properties
     *
     * @return array List of hidden properties
     */
    protected function getHiddenProperties()
    {
        return [];
    }




